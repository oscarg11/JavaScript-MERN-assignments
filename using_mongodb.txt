1.) Get all Students
{
    "students": [
        {
            "birthday": [
                {
                    "month": 11,
                    "day": 7,
                    "year": 1998,
                    "_id": "640fdc35cfe470493a2ce6e2"
                }
            ],
            "_id": "640fdc35cfe470493a2ce6e1",
            "student_name": "Oscar Garcia",
            "home_state": "Pennsylvania",
            "lucky_number": 7,
            "__v": 0
        },
        {
            "birthday": {
                "month": 5,
                "day": 5,
                "year": 1985
            },
            "_id": "640fe2d45469a98edf19196c",
            "student_name": "Cristiano Ronaldo",
            "home_state": "Madeira",
            "lucky_number": 7,
            "__v": 0
        },
        {
            "birthday": {
                "month": 8,
                "day": 7,
                "year": 1998
            },
            "_id": "640fe32f5469a98edf19196e",
            "student_name": "Jalen Hurts",
            "home_state": "Texas",
            "lucky_number": 1,
            "__v": 0
        },
        {
            "birthday": {
                "month": 10,
                "day": 20,
                "year": 1990
            },
            "_id": "640fe3695469a98edf191970",
            "student_name": "John Doe",
            "home_state": "California",
            "lucky_number": 4,
            "__v": 0
        },
        {
            "birthday": {
                "month": 5,
                "day": 20,
                "year": 1977
            },
            "_id": "640fe3a75469a98edf191972",
            "student_name": "John Frusciante",
            "home_state": "New York",
            "lucky_number": 15,
            "__v": 0
        }
    ]
}
2.) Retrieve all students who are from California (San Jose Dojo) or Washington (Seattle Dojo).

my_first_db> db.students.find({ $or: [{home_state: 'Texas'} ,{ home_state: 'California'}]})
[
  {
    _id: ObjectId("640fe32f5469a98edf19196e"),
    student_name: 'Jalen Hurts',
    home_state: 'Texas',
    lucky_number: 1,
    birthday: { month: 8, day: 7, year: 1998 },
    __v: 0
  },
  {
    _id: ObjectId("640fe3695469a98edf191970"),
    student_name: 'John Doe',
    home_state: 'California',
    lucky_number: 4,
    birthday: { month: 10, day: 20, year: 1990 },
    __v: 0
  },
  {
    _id: ObjectId("6410c43c25b078845810eb69"),
    student_name: 'James Harden',
    home_state: 'California',
    lucky_number: 16,
    birday: { month: 2, day: 8, year: 1990 }
  }
]
3.)
Get all students whose lucky number is greater than 3
my_first_db> db.students.find({lucky_number: {$gt: 3}})
[
  {
    _id: ObjectId("640fdc35cfe470493a2ce6e1"),
    student_name: 'Oscar Garcia',
    home_state: 'Pennsylvania',
    lucky_number: 7,
    birthday: [
      {
        month: 11,
        day: 7,
        year: 1998,
        _id: ObjectId("640fdc35cfe470493a2ce6e2")
      }
    ],
    __v: 0
  },
  {
    _id: ObjectId("640fe2d45469a98edf19196c"),
    student_name: 'Cristiano Ronaldo',
    home_state: 'Madeira',
    lucky_number: 7,
    birthday: { month: 5, day: 5, year: 1985 },
    __v: 0
  },
  {
    _id: ObjectId("640fe3695469a98edf191970"),
    student_name: 'John Doe',
    home_state: 'California',
    lucky_number: 4,
    birthday: { month: 10, day: 20, year: 1990 },
    __v: 0
  },
  {
    _id: ObjectId("640fe3a75469a98edf191972"),
    student_name: 'John Frusciante',
    home_state: 'New York',
    lucky_number: 15,
    birthday: { month: 5, day: 20, year: 1977 },
    __v: 0
  },
  {
    _id: ObjectId("6410c43c25b078845810eb69"),
    student_name: 'James Harden',
    home_state: 'California',
    lucky_number: 16,
    birday: { month: 2, day: 8, year: 1990 }
  }
]

4.) Get all students whose lucky number is less than or equal to 10

my_first_db> db.students.find({lucky_number: {$lte: 10}})
[
  {
    _id: ObjectId("640fdc35cfe470493a2ce6e1"),
    student_name: 'Oscar Garcia',
    home_state: 'Pennsylvania',
    lucky_number: 7,
    birthday: [
      {
        month: 11,
        day: 7,
        year: 1998,
        _id: ObjectId("640fdc35cfe470493a2ce6e2")
      }
    ],
    __v: 0
  },
  {
    _id: ObjectId("640fe2d45469a98edf19196c"),
    student_name: 'Cristiano Ronaldo',
    home_state: 'Madeira',
    lucky_number: 7,
    birthday: { month: 5, day: 5, year: 1985 },
    __v: 0
  },
  {
    _id: ObjectId("640fe32f5469a98edf19196e"),
    student_name: 'Jalen Hurts',
    home_state: 'Texas',
    lucky_number: 1,
    birthday: { month: 8, day: 7, year: 1998 },
    __v: 0
  },
  {
    _id: ObjectId("640fe3695469a98edf191970"),
    student_name: 'John Doe',
    home_state: 'California',
    lucky_number: 4,
    birthday: { month: 10, day: 20, year: 1990 },
    __v: 0
  }
]

5.) Get all students whose lucky number is between 1 and 9 (inclusive)

my_first_db> db.students.find({lucky_number: {$gte: 1, $lte: 9}})
[
  {
    _id: ObjectId("640fdc35cfe470493a2ce6e1"),
    student_name: 'Oscar Garcia',
    home_state: 'Pennsylvania',
    lucky_number: 7,
    birthday: [
      {
        month: 11,
        day: 7,
        year: 1998,
        _id: ObjectId("640fdc35cfe470493a2ce6e2")
      }
    ],
    __v: 0
  },
  {
    _id: ObjectId("640fe2d45469a98edf19196c"),
    student_name: 'Cristiano Ronaldo',
    home_state: 'Madeira',
    lucky_number: 7,
    birthday: { month: 5, day: 5, year: 1985 },
    __v: 0
  },
  {
    _id: ObjectId("640fe32f5469a98edf19196e"),
    student_name: 'Jalen Hurts',
    home_state: 'Texas',
    lucky_number: 1,
    birthday: { month: 8, day: 7, year: 1998 },
    __v: 0
  },
  {
    _id: ObjectId("640fe3695469a98edf191970"),
    student_name: 'John Doe',
    home_state: 'California',
    lucky_number: 4,
    birthday: { month: 10, day: 20, year: 1990 },
    __v: 0
  }
]

6.) Add a field named 'interests' to all student documents in the collection. 
The field should be an array and contain the following entries: 'coding', 'brunch', MongoDB'.
 Add this field to all documents using a single command.

 my_first_db> db.students.updateMany({}, {$set : {interests: ['coding', 'brunch','MongoDB']}})
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 6,
  modifiedCount: 6,
  upsertedCount: 0
}

7.) Add some unique interests for each particular student
db.students.update({student_name: 'James Harden'}, {$push: {interests: 'Basketball'}})
//or since .update is deprecated
db.students.updateOne({student_name: 'Oscar Garcia'}, {$push: {interests: 'Soccer'}})

8.)Add the interst 'taxes' to someones interest array
db.students.updateOne({student_name: 'John Doe'}, {$push: {interests: 'taxes'}})

9.)Remove the 'taxes' interest you just added.
db.students.updateOne({student_name: 'John Doe'}, {$pull: {interests: 'taxes'}})

10.) Remove all students from California
db.students.remove({home_state: 'California'})

11.) Remove a student by named
db.students.remove({student_name: 'Cristiano Ronaldo'})

12.) Remove a student whose lucky number is greater than 5 (JUST ONE)
db.students.remove({lucky_number: {$gt: 5}}, true)

13.) Add a field to each student document called 'number_of_belts' and set it to 0.
db.students.updateMany({}, {$set: {number_of_belts: 0}})

14.) Increment this field by 1 for all students in Texas.
db.students.updateMany({home_state: 'Texas'}, {$inc: {number_of_belts: 1}})

15.) Rename the 'number_of_belts' field to 'belts_earned'
db.students.updateMany({}, {$rename: {number_of_belts: 'belts_earned'}})

16.) Remove the 'lucky_number' field.
db.students.updateMany({}, {$unset: {lucky_number: ''}})

17.) Add a 'updated_on' field, and set the value as the current date.
db.students.updateMany({}, {$set: {'updated_on': Date()}})


